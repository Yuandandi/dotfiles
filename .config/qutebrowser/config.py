# Autogenerated config.py
#
# NOTE: config.py is intended for advanced users who are comfortable
# with manually migrating the config file on qutebrowser upgrades. If
# you prefer, you can also configure qutebrowser using the
# :set/:bind/:config-* commands without having to write a config.py
# file.
#
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Change the argument to True to still load settings configured via autoconfig.yml
config.load_autoconfig(False)

# Always restore open sites when qutebrowser is reopened. Without this
# option set, `:wq` (`:quit --save`) needs to be used to save open tabs
# (and restore them), while quitting qutebrowser in any other way will
# not save/restore the session. By default, this will save to the
# session which was last loaded. This behavior can be customized via the
# `session.default_name` setting.
# Type: Bool
c.auto_save.session = True

# Automatically start playing `<video>` elements.
# Type: Bool
c.content.autoplay = False

# Size (in bytes) of the HTTP network cache. Null to use the default
# value. With QtWebEngine, the maximum supported value is 2147483647 (~2
# GB).
# Type: Int
c.content.cache.size = 5242880

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'chrome-devtools://*')

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'devtools://*')

# Allow websites to share screen content.
# Type: BoolAsk
# Valid values:
#   - true
#   - false
#   - ask
c.content.desktop_capture = False

# Allow websites to request geolocations.
# Type: BoolAsk
# Valid values:
#   - true
#   - false
#   - ask
c.content.geolocation = False

# Value to send in the `Accept-Language` header. Note that the value
# read from JavaScript is always the global value.
# Type: String
config.set('content.headers.accept_language', '', 'https://matchmaker.krunker.io/*')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99 Safari/537.36', 'https://*.slack.com/*')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
c.content.headers.user_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36'

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}', 'https://web.whatsapp.com/')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}; rv:90.0) Gecko/20100101 Firefox/90.0', 'https://accounts.google.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, '*://*.wikidata.org/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, '*://*.youtube.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, '*://drive.google.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, '*://gitlab.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, '*://github.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, '*://youtube.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, '*://chat.openai.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, '*://www.speedtest.net/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, '*://duckduckgo.com/?q=*=images')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, '*://www.twitch.tv/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'chrome-devtools://*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'devtools://*')

# Load images automatically in web pages.
# Type: Bool
c.content.images = True

# Enable JavaScript.
# Type: Bool
c.content.javascript.enabled = False

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.amazon.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.archlinux.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.bitwarden.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.commonapp.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.crosserville.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.duckduckgo.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.piped.kavin.rocks/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.evanchen.cc/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.facebook.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.firebaseapp.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.galacticpuzzlehunt.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.g2mathprogram.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.github.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.gradescope.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.hanabi.github.io/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.hmmt.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.instagram.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.itch.io/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.komal.hu/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.lmfdb.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.miro.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.mit.edu/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.mitadmissions.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.monkeytype.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.myaccount.google.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.overleaf.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.pretzel.rocks/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.probase.app/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.pythonanywhere.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.readthedocs.io/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.reference.slideroom.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.sagemath.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.stackexchange.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.steampowered.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.stripe.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.tailwindcss.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.teammatehunt.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.torproject.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.twitch.tv/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.wikipedia.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.wolframalpha.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.wikidata.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.usaco.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.youtube.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://127.0.0.1/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://accounts.google.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://artofproblemsolving.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://arxiv.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://athemath.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://bitwarden.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://calendar.google.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://calendly.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://codeforces.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://dennisc.net/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://devjoe.appspot.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://discord.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://docs.google.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://drive.google.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://duckduckgo.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://gitlab.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://github.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://groups.google.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://hanabi-competitions.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://hanabi.github.io/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://hanabi-league.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://hanabi-league.github.io/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://hanab.live/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://ioinformatics.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://localhost/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://login.artofproblemsolving.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://mathoverflow.net/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://mit.edu/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://poll.ma.pe/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://projecteuler.net/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://nightbot.tv/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://regex101.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://sc2replaystats.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://stackoverflow.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://streamlabs.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://tailwindcomponents.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://tailwindcss.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://translate.google.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://usaco.guide/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://usaco.org/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://usamo.wordpress.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://wordpress.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://www.google.com/maps/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://xkcd.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://youtube.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://chat.openai.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://www.speedtest.net/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome-devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Allow locally loaded documents to access remote URLs.
# Type: Bool
config.set('content.local_content_can_access_remote_urls', True, 'file:///home/danzor/.local/share/qutebrowser/userscripts/*')

# Allow locally loaded documents to access other local URLs.
# Type: Bool
config.set('content.local_content_can_access_file_urls', False, 'file:///home/danzor/.local/share/qutebrowser/userscripts/*')

# Allow websites to show notifications.
# Type: BoolAsk
# Valid values:
#   - true
#   - false
#   - ask
c.content.notifications.enabled = False

# Display PDF files via PDF.js in the browser without showing a download
# prompt. Note that the files can still be downloaded by clicking the
# download button in the pdf.js viewer. With this set to `false`, the
# `:prompt-open-download --pdfjs` command (bound to `<Ctrl-p>` by
# default) can be used in the download prompt.
# Type: Bool
c.content.pdfjs = False

# Enable plugins in Web pages.
# Type: Bool
c.content.plugins = False

# Enable WebGL.
# Type: Bool
c.content.webgl = False

# Directory to save downloads to. If unset, a sensible OS-specific
# default is used.
# Type: Directory
c.downloads.location.directory = '~/downloads'

# Make characters in hint strings uppercase.
# Type: Bool
c.hints.uppercase = True

# Enable smooth scrolling for web pages. Note smooth scrolling does not
# work with the `:scroll-px` command.
# Type: Bool
c.scrolling.smooth = False

# Languages to use for spell checking. You can check for available
# languages and install dictionaries using scripts/dictcli.py. Run the
# script with -h/--help for instructions.
# Type: List of String
# Valid values:
#   - af-ZA: Afrikaans (South Africa)
#   - bg-BG: Bulgarian (Bulgaria)
#   - ca-ES: Catalan (Spain)
#   - cs-CZ: Czech (Czech Republic)
#   - da-DK: Danish (Denmark)
#   - de-DE: German (Germany)
#   - el-GR: Greek (Greece)
#   - en-AU: English (Australia)
#   - en-CA: English (Canada)
#   - en-GB: English (United Kingdom)
#   - en-US: English (United States)
#   - es-ES: Spanish (Spain)
#   - et-EE: Estonian (Estonia)
#   - fa-IR: Farsi (Iran)
#   - fo-FO: Faroese (Faroe Islands)
#   - fr-FR: French (France)
#   - he-IL: Hebrew (Israel)
#   - hi-IN: Hindi (India)
#   - hr-HR: Croatian (Croatia)
#   - hu-HU: Hungarian (Hungary)
#   - id-ID: Indonesian (Indonesia)
#   - it-IT: Italian (Italy)
#   - ko: Korean
#   - lt-LT: Lithuanian (Lithuania)
#   - lv-LV: Latvian (Latvia)
#   - nb-NO: Norwegian (Norway)
#   - nl-NL: Dutch (Netherlands)
#   - pl-PL: Polish (Poland)
#   - pt-BR: Portuguese (Brazil)
#   - pt-PT: Portuguese (Portugal)
#   - ro-RO: Romanian (Romania)
#   - ru-RU: Russian (Russia)
#   - sh: Serbo-Croatian
#   - sk-SK: Slovak (Slovakia)
#   - sl-SI: Slovenian (Slovenia)
#   - sq: Albanian
#   - sr: Serbian
#   - sv-SE: Swedish (Sweden)
#   - ta-IN: Tamil (India)
#   - tg-TG: Tajik (Tajikistan)
#   - tr-TR: Turkish (Turkey)
#   - uk-UA: Ukrainian (Ukraine)
#   - vi-VN: Vietnamese (Viet Nam)
c.spellcheck.languages = []

# When to show the tab bar.
# Type: String
# Valid values:
#   - always: Always show the tab bar.
#   - never: Always hide the tab bar.
#   - multiple: Hide the tab bar if only one tab is open.
#   - switching: Show the tab bar when switching tabs.
c.tabs.show = 'never'
c.scrolling.bar = 'never'

# Page to open if :open -t/-b/-w is used without URL. Use `about:blank`
# for a blank page.
# Type: FuzzyUrl
c.url.default_page = 'about:blank'

# Page(s) to open at the start.
# Type: List of FuzzyUrl, or FuzzyUrl
c.url.start_pages = ['about:blank']

# Default zoom level.
# Type: Perc
c.zoom.default = '160%'

# Available zoom levels.
# Type: List of Perc
c.zoom.levels = ['100%', '125%', '150%', '175%', '200%']

# Render all web contents using a dark theme. Example configurations
# from Chromium's `chrome://flags`: - "With simple HSL/CIELAB/RGB-based
# inversion": Set   `colors.webpage.darkmode.algorithm` accordingly, and
# set `colors.webpage.darkmode.policy.images` to `never`.  - "With
# selective image inversion": qutebrowser default settings.
# Type: Bool
c.colors.webpage.darkmode.enabled = True

# Which algorithm to use for modifying how colors are rendered with
# darkmode. The `lightness-cielab` value was added with QtWebEngine 5.14
# and is treated like `lightness-hsl` with older QtWebEngine versions.
# Type: String
# Valid values:
#   - lightness-cielab: Modify colors by converting them to CIELAB color space and inverting the L value. Not available with Qt < 5.14.
#   - lightness-hsl: Modify colors by converting them to the HSL color space and inverting the lightness (i.e. the "L" in HSL).
#   - brightness-rgb: Modify colors by subtracting each of r, g, and b from their maximum value.
c.colors.webpage.darkmode.algorithm = 'lightness-hsl'

# Which images to apply dark mode to.
# Type: String
# Valid values:
#   - always: Apply dark mode filter to all images.
#   - never: Never apply dark mode filter to any images.
#   - smart: Apply dark mode based on image content. Not available with Qt 5.15.0.
#   - smart-simple: On QtWebEngine 6.6, use a simpler algorithm for smart mode (based on numbers of colors and transparency), rather than an ML-based model. Same as 'smart' on older QtWebEnigne versions.
c.colors.webpage.darkmode.policy.images = 'never'

# Default font families to use. Whenever "default_family" is used in a
# font setting, it's replaced with the fonts listed here. If set to an
# empty value, a system-specific monospace default is used.
# Type: List of Font, or Font
c.fonts.default_family = '"Lexend Deca"'

# Default font size to use. Whenever "default_size" is used in a font
# setting, it's replaced with the size listed here. Valid values are
# either a float value with a "pt" suffix, or an integer value with a
# "px" suffix.
# Type: String
c.fonts.default_size = '12pt'

# Font used for the debugging console.
# Type: Font
c.fonts.debug_console = '11pt "Lexend Deca"'

# Font used for prompts.
# Type: Font
c.fonts.prompts = 'default_size JetBrainsMonoNl Nerd Font Propo'

# Font used in the statusbar.
# Type: Font
c.fonts.statusbar = '11pt "Lexend Deca"'

# Bindings for normal mode
config.unbind('+')
config.unbind('-')
config.bind('0', 'home')
config.bind(';D', 'set downloads.location.directory ~/Downloads ;; hint links download')
config.unbind(';b')
config.bind(';cf', 'set downloads.location.directory ~/.config ;; hint links download')
config.bind(';d', 'set downloads.location.directory ~/Documents ;; hint links download')
config.unbind(';f')
config.bind(';h', 'set downloads.location.directory ~/ ;; hint links download')
config.bind(';m', 'set downloads.location.directory ~/Music ;; hint links download')
config.bind(';pp', 'set downloads.location.directory ~/Pictures ;; hint links download')
config.unbind(';r')
config.bind(';s', 'set downloads.location.directory ~/.scripts ;; hint links download')
config.bind(';vv', 'set downloads.location.directory ~/Videos ;; hint links download')
config.unbind('<Alt+1>')
config.unbind('<Alt+2>')
config.unbind('<Alt+3>')
config.unbind('<Alt+4>')
config.unbind('<Alt+5>')
config.unbind('<Alt+6>')
config.unbind('<Alt+7>')
config.unbind('<Alt+8>')
config.unbind('<Alt+9>')
config.bind('<Backspace>', 'config-source')
config.bind('<Ctrl+->', 'zoom-out')
config.bind('<Ctrl+=>', 'zoom-in')
config.unbind('<Ctrl+Alt+p>')
config.unbind('<Ctrl+F5>')
config.unbind('<Ctrl+PgDown>')
config.unbind('<Ctrl+PgUp>')
config.unbind('<Ctrl+Shift+Tab>')
config.unbind('<Ctrl+Shift+n>')
config.unbind('<Ctrl+Shift+t>')
config.unbind('<Ctrl+Shift+w>')
config.unbind('<Ctrl+Tab>')
config.unbind('<Ctrl+^>')
config.unbind('<Ctrl+b>')
config.unbind('<Ctrl+d>')
config.unbind('<Ctrl+f>')
config.bind('<Ctrl+h>', 'history')
config.unbind('<Ctrl+p>')
config.unbind('<Ctrl+q>')
config.unbind('<Ctrl+s>')
config.unbind('<Ctrl+t>')
config.unbind('<Ctrl+w>')
config.unbind('<Ctrl+x>')
config.unbind('<F5>')
config.bind('=', 'zoom 100')
config.unbind('D')
config.bind('H', 'scroll left')
config.bind('L', 'scroll right')
config.unbind('R')
config.unbind('Sb')
config.unbind('Sh')
config.unbind('Sq')
config.unbind('Ss')
config.unbind('U')
config.unbind('[[')
config.unbind(']]')
config.unbind('ad')
config.bind('b', 'scroll-page 0 -0.5')
config.unbind('d')
config.bind('dc', 'download-cancel')
config.bind('dd', 'tab-close')
config.unbind('g$')
config.unbind('g0')
config.unbind('gB')
config.unbind('gC')
config.unbind('gD')
config.unbind('gJ')
config.unbind('gK')
config.unbind('gO')
config.unbind('gU')
config.unbind('g^')
config.unbind('ga')
config.unbind('gb')
config.unbind('gd')
config.unbind('gm')
config.unbind('gu')
config.bind('gy', 'hint links spawn mpv {hint-url}')
config.bind('h', 'back')
config.bind('l', 'forward')
config.unbind('sf')
config.unbind('sk')
config.unbind('sl')
config.unbind('ss')
config.bind('t', 'set-cmd-text -s :open -t')
config.unbind('tCH')
config.unbind('tCh')
config.unbind('tCu')
config.unbind('tIH')
config.unbind('tIh')
config.unbind('tIu')
config.unbind('tPH')
config.unbind('tPh')
config.unbind('tPu')
config.unbind('tSH')
config.unbind('tSh')
config.unbind('tSu')
config.unbind('tcH')
config.unbind('tch')
config.unbind('tcu')
config.unbind('th')
config.unbind('tiH')
config.unbind('tih')
config.unbind('tiu')
config.unbind('tl')
config.unbind('tpH')
config.unbind('tph')
config.unbind('tpu')
config.unbind('tsH')
config.unbind('tsh')
config.unbind('tsu')
config.unbind('wB')
config.unbind('wIw')
config.unbind('wO')
config.unbind('wP')
config.unbind('wb')
config.unbind('wf')
config.unbind('wh')
config.unbind('wl')
config.unbind('wo')
config.unbind('wp')
config.unbind('xO')
config.bind('xb', 'config-cycle statusbar.show always never')
config.bind('xt', 'config-cycle tabs.show always never')
config.unbind('yD')
config.unbind('yM')
config.unbind('yP')
config.unbind('yT')
config.unbind('yY')
config.bind('yo', 'yank inline [[{url}][{title}]]')
config.unbind('{{')
config.unbind('}}')

# Bindings for caret mode
config.bind('<Alt+b>', 'mode-leave', mode='caret')
config.unbind('<Ctrl+Space>', mode='caret')
config.unbind('H', mode='caret')
config.unbind('L', mode='caret')
config.unbind('[', mode='caret')
config.unbind(']', mode='caret')
config.unbind('c', mode='caret')
config.unbind('e', mode='caret')
config.unbind('y', mode='caret')

# Bindings for command mode
config.unbind('<Alt+Backspace>', mode='command')
config.unbind('<Alt+f>', mode='command')
config.bind('<Alt+w>', 'rl-forward-word', mode='command')
config.bind('<Ctrl+;>', 'rl-rubout " "', mode='command')
config.unbind('<Ctrl+?>', mode='command')
config.unbind('<Ctrl+Shift+Tab>', mode='command')
config.unbind('<Ctrl+Shift+c>', mode='command')
config.unbind('<Ctrl+Shift+w>', mode='command')
config.unbind('<Ctrl+Tab>', mode='command')
config.unbind('<Ctrl+b>', mode='command')
config.unbind('<Ctrl+c>', mode='command')
config.bind('<Ctrl+j>', 'completion-item-focus --history next', mode='command')
config.bind('<Ctrl+k>', 'completion-item-focus --history prev', mode='command')
config.unbind('<Ctrl+w>', mode='command')
config.unbind('<Ctrl+y>', mode='command')
config.unbind('<Down>', mode='command')
config.unbind('<PgDown>', mode='command')
config.unbind('<PgUp>', mode='command')
config.unbind('<Shift+Del>', mode='command')
config.unbind('<Shift+Tab>', mode='command')
config.unbind('<Up>', mode='command')

# Bindings for hint mode
config.unbind('<Ctrl+f>', mode='hint')

# Bindings for insert mode
config.bind('<Alt+b>', 'fake-key <Ctrl-Left>', mode='insert')
config.bind('<Alt+d>', 'fake-key <Ctrl-Delete>', mode='insert')
config.bind('<Alt+f>', 'fake-key <Ctrl-Right>', mode='insert')
config.bind('<Ctrl+;>', 'fake-key <Ctrl-Backspace>', mode='insert')
config.bind('<Ctrl+a>', 'fake-key <Home>', mode='insert')
config.bind('<Ctrl+b>', 'fake-key <Left>', mode='insert')
config.bind('<Ctrl+d>', 'fake-key <Delete>', mode='insert')
config.bind('<Ctrl+e>', 'fake-key <End>', mode='insert')
config.bind('<Ctrl+f>', 'fake-key <Right>', mode='insert')
config.bind('<Ctrl+h>', 'fake-key <Backspace>', mode='insert')
config.bind('<Ctrl+k>', 'fake-key <Shift-End><Delete>', mode='insert')
config.bind('<Ctrl+m>', 'fake-key <Enter>', mode='insert')
config.bind('<Ctrl+n>', 'fake-key <Down>', mode='insert')
config.bind('<Ctrl+p>', 'fake-key <Up>', mode='insert')
config.bind('<Ctrl+u>', 'fake-key <Shift-Home><Delete>', mode='insert')
config.bind('<Ctrl+x><Ctrl+e>', 'edit-text', mode='insert')
config.bind('<Return>', 'fake-key <Return><Escape>', mode='insert')

# Bindings for prompt mode
config.bind('<Return>', 'prompt-accept', mode='prompt')
config.bind('b', 'rl-unix-line-discard', mode='prompt')
