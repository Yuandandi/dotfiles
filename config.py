# ~/.config/qutebrowser/config.py

# Autogenerated config.py
#
# NOTE: config.py is intended for advanced users who are comfortable
# with manually migrating the config file on qutebrowser upgrades. If
# you prefer, you can also configure qutebrowser using the
# :set/:bind/:config-* commands without having to write a config.py
# file.
#
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Change the argument to True to still load settings configured via autoconfig.yml
config.load_autoconfig(False)

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'chrome-devtools://*')

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'devtools://*')

# Value to send in the `Accept-Language` header. Note that the value
# read from JavaScript is always the global value.
# Type: String
config.set('content.headers.accept_language', '', 'https://matchmaker.krunker.io/*')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}', 'https://web.whatsapp.com/')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}; rv:90.0) Gecko/20100101 Firefox/90.0', 'https://accounts.google.com/*')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99 Safari/537.36', 'https://*.slack.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'chrome-devtools://*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'devtools://*')

c.zoom.levels = ['100%', '125%', '150%', '175%', '200%']

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome-devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Bindings for normal mode

config.bind('yo', 'yank inline [[{url}][{title}]]')
config.bind("<Ctrl-h>", "fake-key <Backspace>", "insert")
config.bind("<Ctrl-a>", "fake-key <Home>", "insert")
config.bind("<Ctrl-e>", "fake-key <End>", "insert")
config.bind("<Ctrl-b>", "fake-key <Left>", "insert")
config.bind("<Mod1-b>", "fake-key <Ctrl-Left>", "insert")
config.bind("<Ctrl-f>", "fake-key <Right>", "insert")
config.bind("<Mod1-f>", "fake-key <Ctrl-Right>", "insert")
config.bind("<Ctrl-p>", "fake-key <Up>", "insert")
config.bind("<Ctrl-n>", "fake-key <Down>", "insert")
config.bind("<Mod1-d>", "fake-key <Ctrl-Delete>", "insert")
config.bind("<Ctrl-d>", "fake-key <Delete>", "insert")
config.bind("<Ctrl-w>", "fake-key <Ctrl-Backspace>", "insert")
config.bind("<Ctrl-;>", "fake-key <Ctrl-Backspace>", "insert")
config.bind("<Ctrl-u>", "fake-key <Shift-Home><Delete>", "insert")
config.bind("<Ctrl-k>", "fake-key <Shift-End><Delete>", "insert")
config.bind("<Ctrl-m>", "fake-key <Enter>", "insert")

config.bind("<Ctrl-x><Ctrl-e>", "edit-text", "insert")

# Bindings for normal mode
# config.bind('M', 'hint links spawn mpv {hint-url}')
# config.bind('Z', 'hint links spawn st -e youtube-dl {hint-url}')
config.bind('xb', 'config-cycle statusbar.show always never')
config.bind('xt', 'config-cycle tabs.show always never')
config.bind('xo', 'config-cycle statusbar.show always never;; config-cycle tabs.show always never')



# Default font families to use. Whenever "default_family" is used in a
# font setting, it's replaced with the fonts listed here. If set to an
# empty value, a system-specific monospace default is used.
# Type: List of Font, or Font
c.fonts.default_family = '"Source Code Pro"'

# Default font size to use. Whenever "default_size" is used in a font
# setting, it's replaced with the size listed here. Valid values are
# either a float value with a "pt" suffix, or an integer value with a
# "px" suffix.
# Type: String
c.fonts.default_size = '12pt'

# Font used in the completion widget.
# Type: Font
c.fonts.completion.entry = '11pt "Source Code Pro"'

# Font used for the debugging console.
# Type: Font
c.fonts.debug_console = '11pt "Source Code Pro"'

c.zoom.default = '150%'

# Font used for prompts.
# Type: Font
c.fonts.prompts = 'default_size sans-serif'

c.zoom.text_only = False

# Font used in the statusbar.
# Type: Font
c.fonts.statusbar = '11pt "Source Code Pro"'

# Darkmode
config.set('colors.webpage.darkmode.enabled', True)

config.unbind('<Alt-1>', mode='normal')
config.unbind('<Alt-2>', mode='normal')
config.unbind('<Alt-3>', mode='normal')
config.unbind('<Alt-4>', mode='normal')
config.unbind('<Alt-5>', mode='normal')
config.unbind('<Alt-6>', mode='normal')
config.unbind('<Alt-7>', mode='normal')
config.unbind('<Alt-8>', mode='normal')
config.unbind('<Alt-9>', mode='normal')
config.unbind(';b', mode='normal')
config.unbind('b', mode='normal')
config.unbind('<ctrl-alt-p>', mode='normal')
config.unbind('<Ctrl-B>', mode='normal')
config.unbind('<Ctrl-D>', mode='normal')
config.unbind('<Ctrl-F5>', mode='normal')
config.unbind('<Ctrl-F>', mode='normal')
config.unbind('<Ctrl-h>', mode='normal')
config.unbind('<Ctrl-^>', mode='normal')
config.unbind('<Ctrl-PgDown>', mode='normal')
config.unbind('<Ctrl-PgUp>', mode='normal')
config.unbind('<Ctrl-p>', mode='normal')
config.unbind('<Ctrl-Q>', mode='normal')
config.unbind('<Ctrl-Shift-N>', mode='normal')
config.unbind('<Ctrl-Shift-Tab>', mode='normal')
config.unbind('<Ctrl-Shift-T>', mode='normal')
config.unbind('<Ctrl-Shift-W>', mode='normal')
config.unbind('<Ctrl-s>', mode='normal')
config.unbind('<Ctrl-Tab>', mode='normal')
config.unbind('<Ctrl-T>', mode='normal')
config.unbind('<Ctrl-U>', mode='normal')
config.unbind('<Ctrl-W>', mode='normal')
config.unbind('<Ctrl-X>', mode='normal')
config.unbind(';d', mode='normal')
config.unbind('d', mode='normal')
config.unbind(';f', mode='normal')
config.unbind(';h', mode='normal')
config.unbind('+', mode='normal')
config.unbind('-', mode='normal')
config.unbind('=', mode='normal')
config.unbind(';r', mode='normal')
config.unbind('D', mode='normal')
config.unbind('<F5>', mode='normal')
config.unbind('R', mode='normal')
config.unbind('Sb', mode='normal')
config.unbind('U', mode='normal')
config.unbind('Sh', mode='normal')
config.unbind('Sq', mode='normal')
config.unbind('Ss', mode='normal')
config.unbind('[[', mode='normal')
config.unbind(']]', mode='normal')
config.unbind('ad', mode='normal')
config.unbind('g$', mode='normal')
config.unbind('g0', mode='normal')
config.unbind('gB', mode='normal')
config.unbind('gC', mode='normal')
config.unbind('gD', mode='normal')
config.unbind('gJ', mode='normal')
config.unbind('gO', mode='normal')
config.unbind('gU', mode='normal')
config.unbind('ga', mode='normal')
config.unbind('gb', mode='normal')
config.unbind('gd', mode='normal')
config.unbind('g^', mode='normal')
config.unbind('gm', mode='normal')
config.unbind('gu', mode='normal')
config.unbind('gK', mode='normal')

config.bind('0', 'home')
config.bind('<Ctrl-h>', 'history')
config.bind('<ctrl-=>', 'zoom-in')
config.bind('<ctrl-->', 'zoom-out')
config.bind('dd', 'tab-close')
config.bind('h', 'back')
config.bind('H', 'scroll left')
config.bind('l', 'forward')
config.bind('L', 'scroll right')
config.bind('=', 'zoom 100')
config.bind('dc', 'download-cancel')
config.bind('t', 'set-cmd-text -s :open -t')

# Vim like navigation in command mode
config.bind('<Ctrl-J>', 'completion-item-focus --history next', mode="command")
config.bind('<Ctrl-K>', 'completion-item-focus --history prev', mode="command")
config.bind('b', 'scroll-page 0 -0.5')
config.bind('b', 'rl-unix-line-discard', mode='prompt')

# unbind normal
config.unbind('sf', mode='normal')
config.unbind('sk', mode='normal')
config.unbind('sl', mode='normal')
config.unbind('ss', mode='normal')
config.unbind('tCH', mode='normal')
config.unbind('tCh', mode='normal')
config.unbind('tCu', mode='normal')
config.unbind('tIH', mode='normal')
config.unbind('tIh', mode='normal')
config.unbind('tIu', mode='normal')
config.unbind('tPH', mode='normal')
config.unbind('tPh', mode='normal')
config.unbind('tPu', mode='normal')
config.unbind('tSH', mode='normal')
config.unbind('tSh', mode='normal')
config.unbind('tSu', mode='normal')
config.unbind('tcH', mode='normal')
config.unbind('tch', mode='normal')
config.unbind('tcu', mode='normal')
config.unbind('th', mode='normal')
config.unbind('tiH', mode='normal')
config.unbind('tih', mode='normal')
config.unbind('tiu', mode='normal')
config.unbind('tl', mode='normal')
config.unbind('tpH', mode='normal')
config.unbind('tph', mode='normal')
config.unbind('tpu', mode='normal')
config.unbind('tsH', mode='normal')
config.unbind('tsh', mode='normal')
config.unbind('tsu', mode='normal')
config.unbind('wB', mode='normal')
config.unbind('wIw', mode='normal')
config.unbind('wO', mode='normal')
config.unbind('wP', mode='normal')
config.unbind('wl', mode='normal')
config.unbind('wo', mode='normal')
config.unbind('wp', mode='normal')
config.unbind('wf', mode='normal')
config.unbind('wh', mode='normal')
config.unbind('xO', mode='normal')
config.unbind('xo', mode='normal')
config.unbind('yD', mode='normal')
config.unbind('yM', mode='normal')
config.unbind('yP', mode='normal')
config.unbind('yT', mode='normal')
config.unbind('yY', mode='normal')
config.unbind('{{', mode='normal')
config.unbind('}}', mode='normal')
config.unbind('wb', mode='normal')

# unbind command
config.unbind('<Ctrl-B>', mode='command')
config.unbind('<Ctrl-C>', mode='command')
config.unbind('<Ctrl-D>', mode='command')
config.unbind('<Ctrl-K>', mode='command')
config.unbind('<Ctrl-Shift-C>', mode='command')
config.unbind('<Ctrl-Shift-Tab>', mode='command')
config.unbind('<Ctrl-Shift-W>', mode='command')
config.unbind('<Ctrl-Tab>', mode='command')
config.unbind('<Ctrl-Y>', mode='command')
config.unbind('<Down>', mode='command')
config.unbind('<PgDown>', mode='command')
config.unbind('<Shift-Delete>', mode='command')
config.unbind('<Up>', mode='command')
config.unbind('<Shift-Tab>', mode='command')
config.unbind('<PgUp>', mode='command')
config.unbind('<Alt-Backspace>', mode='command')
config.unbind('<Ctrl-W>', mode='command')
config.unbind('<Alt-F>', mode='command')
config.unbind('<Ctrl-?>', mode='command')

config.unbind('[', mode='caret')
config.unbind('c', mode='caret')
config.unbind('e', mode='caret')
config.unbind(']', mode='caret')
config.unbind('y', mode='caret')
config.unbind('<Ctrl-Space>', mode='caret')
config.unbind('H', mode='caret')
config.unbind('L', mode='caret')

config.bind('<Alt-B>', 'mode-leave', mode='caret')

config.bind('<Ctrl-;>', 'rl-rubout " "', mode='command')

config.unbind('<Alt-Backspace>', mode='command')
config.unbind('<Alt-F>', mode='command')
config.unbind('<Ctrl-?>', mode='command')

config.unbind('<Ctrl-F>', mode='hint')

config.bind('<Alt-W>', 'rl-forward-word', mode='command')

config.bind('<Return>', 'prompt-accept', mode='prompt')

config.bind('<Return>', 'fake-key <Return><Escape>', mode='insert')
